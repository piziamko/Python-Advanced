# Ines 2

def combinations(names, count, current_names=[]):
    if len(current_names) == count:
        print(", ".join(current_names))
        return

    for i in range(len(names)):
        current_names.append(names[i])
        combinations(names[i+1:], count, current_names)
        current_names.pop()


names = input().split(", ")
n = int(input())
combinations(names, n)

#
def find_chair_combinations(names, count, combination=[]):
    if len(combination) == count:
        print(', '.join(combination))
        return

    for i in range(len(names)):
        name = names[i]
        combination.append(name)
        find_chair_combinations(names[i + 1:], count, combination)
        combination.pop()


names = input().split(', ')
chairs_count = int(input())
find_chair_combinations(names, chairs_count)
