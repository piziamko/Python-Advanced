
# Write a program that reads a rectangular integer matrix of size N x M and find the
# square 3 x 3 that has maximal sum of its elements.
# Input
# •	On the first line, you will receive the rows N and columns M. On the next N lines
# you will receive each row with its columns
# Output
# •	Print the elements of the 3 x 3 square as a matrix, along with their sum


initial_row, initial_col = list(map(int, input().split()))
matrix = [list(map(int, input().split())) for c in range(initial_row)]
max_sum = 0
max_matrix = []
for row in range(initial_row - 2):
	for col in range(initial_col - 2):
		sub_matrix = []
		for sub_row in range(row, row + 3):
			temp = []
			for sub_col in range(col, col + 3):
				temp.append(matrix[sub_row][sub_col])
			sub_matrix.append(temp)
		if sum([sum(c) for c in sub_matrix]) > max_sum:
			max_sum = sum([sum(c) for c in sub_matrix])
			max_matrix = sub_matrix.copy()
print(f'Sum = {max_sum}')
[print(' '.join(list(map(str, c)))) for c in max_matrix]


#####

from sys import maxsize


def find_subrectangle_sum(matrix, row, col):
    subrectangle_sum = 0

    for r in range(row, row + 3):
        for c in range(col, col + 3):
            subrectangle_sum += matrix[r][c]

    return subrectangle_sum


def find_subrectangle_values(matrix, row, col):
    subrectangle_values = []

    for r in range(row, row + 3):
        subrectangle_row = []
        for c in range(col, col + 3):
            subrectangle_row += [matrix[r][c]]
        subrectangle_values += [subrectangle_row]

    return subrectangle_values


def solve(matrix, rows_count, cols_count):
    max_subrectangle_sum = -maxsize
    max_subrectangle_values = []

    for row in range(rows_count - 2):
        for col in range(cols_count - 2):
            subrectangle_sum = find_subrectangle_sum(matrix, row, col)
            if subrectangle_sum > max_subrectangle_sum:
                max_subrectangle_sum = subrectangle_sum
                max_subrectangle_values = find_subrectangle_values(matrix, row, col)

    return max_subrectangle_sum, max_subrectangle_values


rows_count, cols_count = list(map(int, input().split()))
matrix = [list(map(int, input().split())) for _ in range(rows_count)]

max_subrectangle_sum, max_subrectangle_values = solve(matrix, rows_count, cols_count)

print(f"Sum = {max_subrectangle_sum}")
[print(' '.join(map(str, row))) for row in max_subrectangle_values]
